version: '3'
services:
  core:
    container_name: core
    build:
      context: ./
      dockerfile: ./Dockerfile
    environment:
      PHP_XDEBUG_REMOTE_PORT: "${PHP_XDEBUG_REMOTE_PORT}"
      PHP_XDEBUG_REMOTE_HOST: "${PHP_XDEBUG_REMOTE_HOST}"
    volumes:
      - ${CORE_PATH}:/app
    ports:
      - "5000:8080"
    depends_on:
      - database
      - rabbitmq
  web:
    container_name: web
    build:
      context: ./
      dockerfile: ./node-conf/Dockerfile
    volumes:
      - ${WEB_PATH}:/app
    ports:
      - "5001:8080"
  database:
    container_name: database
    image: "postgres:13.3"
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - "${DATABASE_PORT}:5432"
    environment:
      - POSTGRES_DB=resserv
      - POSTGRES_USER=${DATABASE_USER_NAME}
      - POSTGRES_PASSWORD=${DATABASE_USER_PASSWORD}

  rabbitmq:
    image: rabbitmq:3.8.11-management
    volumes:
      - ./rabbitmq:/rabbitmq
    labels:
      data: amqp
    hostname: rabbitmq
    environment:
      - RABBITMQ_VM_MEMORY_HIGH_WATERMARK=0.2
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 536870912 load_definitions "/rabbitmq/definitions.json"
    ports:
      - "5672:5672/tcp"
      - "15672:15672/tcp"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 5s